@inject Microsoft.AspNetCore.Identity.SignInManager<IdentityUser> signInManager;
@inject BagContext _context;
@*@model List<AirSicknessBags.Models.Bagsmvc>*@
@model AirSicknessBags.ViewModels.BagsImageViewModel 
@{
    ViewData["Title"] = "Bags";
}

<h1>Bag List</h1>

@*@using (Html.BeginForm("Index", "Bags", FormMethod.Post))*@


@*<form id="BagForm" asp-controller="Bags" asp-action="Index" enctype="multipart/form-data" method="post">*@
<form id="BagForm" asp-controller="Bags" asp-action="Index" method="post">
    <div class="container border border-primary p-2 m-1 bg-light">
        <div class="form-group row">
            <div class="col-4">
                <h5>
                    Find Airline
                    <input type="text" id="Airline" name="Airline" class="form-control-sm" value="Part or all of bag name"
                           onclick="ClearOutFields(['Airline']);" />
                </h5>
                @*<h5>Running @System.Environment.Version of .Net core</h5>
                <h5>Airline search = @ViewBag.AirlineName</h5>
                <h5>Debug = @TempData["debug"]</h5>*@
            </div>
            <div class="col-4">
                <h5>
                    Details Contain
                    <input type="text" id="Detail" name="Detail" class="form-control-sm" value="Part or all of bag details"
                           onclick="ClearOutFields(['Detail']);" />
                </h5>
            </div>
            <div class="col-1">
                <label for="BagType">Type:</label>
            </div>
            <div class="col-2">
                <select id="BagType" name="BagType" class="form-control-sm">
                    <option value="">Any</option>
                    <option value="A">Air Sickness</option>
                    <option value="S">Sea Sickness</option>
                    <option value="C">Car Sickness</option>
                    <option value="B">Bus Sickness</option>
                    <option value="T">Train Sickness</option>
                    <option value="P">Space Sickness</option>
                    <option value="D">Video Games</option>
                    <option value="L">Political</option>
                    <option value="M">Movie</option>
                    <option value="E">Medical</option>
                    <option value="U">Musical</option>
                    <option value="O">Odd/Unique</option>
                    <option value="G">Generic</option>
                    <option value="N">Unknown</option>
                    <option value="V">Favorites</option>
                </select>
            </div>

        </div>

        <div class="form-group row">

            <div class="col-1">
                <label for="Equal">Equal</label>
                <input type="radio" id="Equal" name="DateCompare" value="Equal">
            </div>
            <div class="col-1">
                <label for="Before">Before</label>
                <input type="radio" id="Before" name="DateCompare" value="Before">
            </div>

            <div class="col-1">
                <label for="After">After</label>
                <input type="radio" id="After" name="DateCompare" value="After">
            </div>

            <select class="col-1" id="Year" name="Year">
                <option value="Any">Any</option>
                @for (int i = 1959; i < DateTime.Now.Year; i++)
                {
                    <option value="@i">@i</option>
                }
            </select>
            <div class="col-4">
                <h6>
                    Text Color
                    <input type="text" id="TextColor" name="TextColor" class="form-control-sm" />
                </h6>
            </div>
            <div class="col-4">
                <h6>
                    Background Color
                    <input type="text" id="BackgroundColor" name="BackgroundColor" class="form-control-sm" />
                </h6>
            </div>

        </div>

        <div class="form-group row">
            <div class="col-2">
                <label for="Swaps">Swaps Only?</label>
                <input type="checkbox" id="Swaps" name="Swaps" @(ViewBag.Swaps == 1 ? "checked" : "")>
            </div>
            <div class="col-3">
                <label for="SeeEveryBag">See Every Bag (may load slowly)</label>
                <input type="checkbox" id="SeeEveryBag" name="SeeEveryBag">
            </div>
            <div class="col-2">
                <input class="btn btn-info" type="submit" value="Find Bag" onclick="ClearOutFields(['Airline', 'Detail']);" />
            </div>
            <div class="col-2">
                @* Only let logged in user create a bag *@
                @if (signInManager.IsSignedIn(User))
                {
                    <a class="btn btn-info" asp-controller="Bags" asp-action="Edit">Create Bag</a>
                }
            </div>
        </div>

    </div>
</form>


        @*Display the bag(s) returned*@
        @if (Model != null)
        {
            <div class="container border border-dark p-2 m-1 bg-warning">
                <div class="form-group row">
                    @if(ViewBag.Swaps == 1)
                    {
                        <div class="col-2">
                            <h2>Swaps</h2>
                            <h6>Uncheck above to clear swaps</h6>
                            </div>
                    }
                <div class="col-2">
                    Page @ViewBag.WhichPage of @ViewBag.NumPages <br />
                    <h5>
                        @if (ViewBag.WhichPage != 1 && ViewBag.NumPages != 1)
                        {
                            <a id="PreviousPageTop" class="btn btn-link sortme" asp-controller="Bags" asp-action="Index"
                               asp-route-sortorder="@ViewBag.SortOrder"
                               asp-route-whichpage="@(ViewBag.WhichPage - 1)">Previous @ViewBag.PerPage Bags</a>
                        }
                        -
                        @if (ViewBag.WhichPage != ViewBag.NumPages && ViewBag.NumPages != 1)
                        {
                            <a id="NextPageTop" class="btn btn-link sortme" asp-controller="Bags" asp-action="Index"
                               asp-route-sortorder="@ViewBag.SortOrder"
                               asp-route-whichpage="@(ViewBag.WhichPage + 1)">Next @ViewBag.PerPage Bags</a>
                        }
                    </h5>

                </div>
                    <div class="col-2">
                        Bags Per Page
                        <input type="number" id="PerPage" name="PerPage" form="BagForm"
                               value="@ViewBag.PerPage" class="form-control-sm w-50" />
                               @*onchange="fillNavigationAttributes(['PreviousPage', 'NextPage'], this.value);" />*@
                        <a id="PreviousPage" class="btn btn-info sortme" asp-controller="Bags" asp-action="Index"
                           asp-route-sortorder="@ViewBag.SortOrder"
                           asp-route-whichpage="@ViewBag.WhichPage">Apply</a>
                        <br />
                        @*onchange="alert(this.value);" /><br />*@
                    </div>
                    <div class="col-1">
                        Sort By:
                    </div>
                    <div class="col-3">
                        <a class="btn btn-link sortme" asp-action="Index" asp-route-sortorder="@ViewBag.NameSortParm"
                           id="NameSort" name="NameSort">
                            Airline / Bag Name @if (ViewBag.NameSortParm == "airline_desc")
                            {<div>descending</div>}
                        </a>  -
                    </div>
                    <div class="col-1">
                        <a class="btn btn-link sortme" asp-action="Index" asp-route-sortorder="@ViewBag.YearSortParm"
                            id="YearSort" name="YearSort">
                            Year @if (ViewBag.YearSortParm == "year_desc")
                            {<div>descending</div>}
                        </a>
                    </div>
                </div>
            </div>

            @if (Model.Bags != null)
            {
                foreach (var x in Model.Bags)
                {
                <div class="container border border-dark p-2 m-1 bg-primary">
                    <div class="form-group row">
                        <div class="col-lg-6">
                            <h4>
                                @x.Airline
                                @if (signInManager.IsSignedIn(User))
                                {
                                    <span>- @x.Id</span>
                                }
                            </h4>
                        </div>
                        <div class="col-lg-6">
                            @if (x.NumberOfSwaps > 0)
                            {
                                <h5 class="alert-heading">Swap available!</h5>
                            }
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-4">
                            @Html.Raw(@BagContext.DisplayImage(x.FrontFileName))
                            @Html.Raw(@BagContext.DisplayImage(x.BackFileName))
                            @Html.Raw(@BagContext.DisplayImage(x.BottomFileName))<br />
                        </div>
                        <div class="col-8">
                            <h5>
                                @(x.Year != null ? "Approximate Year: " + x.Year + ", " : "")
                                @if (x.Person != null)
                                {
                                    <strong>
                                        @(x.Person.FirstName != null || x.Person.LastName != null ?
                            "Originally Obtained From: " + x.Person.FirstName +
                            ' ' + x.Person.MiddleName + ' ' + x.Person.LastName + ", " : "")
                                    </strong>
                                }
                                @Html.Raw(x.Detail)
                            </h5>
                        </div>
                        <div class="col-8">
                            @* Only let logged in user edit, copy or link bags *@
                            @if (signInManager.IsSignedIn(User))
                            {
                                <a class="btn btn-info" asp-controller="Bags" asp-action="Edit" asp-route-id="@x.Id">Edit Bag</a>
                                <a class="btn btn-info" asp-controller="Bags" asp-action="Index">Cancel</a>
                                <a class="btn btn-info" asp-controller="Bags" asp-action="Edit" asp-route-id="@x.Id" asp-route-copy="true">Copy Bag</a>
                                <a class="btn btn-info" asp-controller="Links" asp-action="Create" asp-route-id="@x.Id" asp-route-copy="true">Link Bag</a>
                            }
                        </div>
                    </div>
                </div>
                }
            }

            <h5>
                @if (ViewBag.WhichPage != 1 && ViewBag.NumPages != 1)
                {
                    <a id="PreviousPage" class="btn btn-link sortme" asp-controller="Bags" asp-action="Index" 
                       asp-route-sortorder="@ViewBag.SortOrder"
                       asp-route-whichpage="@(ViewBag.WhichPage - 1)">Previous @ViewBag.PerPage Bags</a>
                }
                -
                @if (ViewBag.WhichPage != ViewBag.NumPages && ViewBag.NumPages != 1)
                {
                    <a id="NextPage" class="btn btn-link sortme" asp-controller="Bags" asp-action="Index" 
                       asp-route-sortorder="@ViewBag.SortOrder"
                       asp-route-whichpage="@(ViewBag.WhichPage + 1)">Next @ViewBag.PerPage Bags</a>
                }
            </h5>

        }


        @*@functions {

                *** Moved to BagContext.cs

            }*@
